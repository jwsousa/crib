{"ts":1360170755461,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express')\n  , app = express()\n  , routes = require('./routes')\n  , crib = require('./routes/crib')\n  , http = require('http')\n  , path = require('path');\n\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\napp.get('/', crib.index);\napp.get('/scoring', crib.scoring);\n\nvar server = require('http').createServer(app);\nserver.listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n\nvar crib = require('./crib');\nvar io = require('socket.io').listen(server)\nio.set('log level', 1);\n\nio.sockets.on('connection', function (socket) {\n  console.log('New connection from: ' + socket.id);\n  // io.sockets.manager.roomClients[socket.id]\n  var game = crib.gameForNewConnection(io, socket);\n\n  socket.on('disconnect', function () {\n    game.endGame();\n  });\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1260}]],"length":1260}
